/// <reference path="../../adonis-typings/redis.d.ts" />
/// <reference types="@adonisjs/application/build/adonis-typings" />
import Redis, { Cluster, NodeRole } from 'ioredis';
import { RedisClusterConfig } from '@ioc:Adonis/Addons/Redis';
import { ApplicationContract } from '@ioc:Adonis/Core/Application';
import { AbstractConnection } from '../AbstractConnection';
/**
 * Redis cluster connection exposes the API to run Redis commands using `ioredis` as the
 * underlying client. The class abstracts the need of creating and managing multiple
 * pub/sub connections by hand, since it handles that internally by itself.
 */
export declare class RedisClusterConnection extends AbstractConnection<Cluster> {
    private config;
    constructor(connectionName: string, config: RedisClusterConfig, application: ApplicationContract);
    /**
     * Creates the subscriber connection, the [[AbstractConnection]] will
     * invoke this method when first subscription is created.
     */
    protected makeSubscriberConnection(): void;
    /**
     * Returns cluster nodes
     */
    nodes(role?: NodeRole): Redis[];
}
