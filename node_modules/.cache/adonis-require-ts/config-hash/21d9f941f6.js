"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Env_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env"));
const config_1 = require("@adonisjs/core/build/config");
exports.default = (0, config_1.hashConfig)({
    default: Env_1.default.get('HASH_DRIVER', 'scrypt'),
    list: {
        scrypt: {
            driver: 'scrypt',
            cost: 16384,
            blockSize: 8,
            parallelization: 1,
            saltSize: 16,
            keyLength: 64,
            maxMemory: 32 * 1024 * 1024,
        },
        argon: {
            driver: 'argon2',
            variant: 'id',
            iterations: 3,
            memory: 4096,
            parallelism: 1,
            saltSize: 16,
        },
        bcrypt: {
            driver: 'bcrypt',
            rounds: 10,
        },
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhhc2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFPQSxnRkFBc0M7QUFDdEMsd0RBQXdEO0FBV3hELGtCQUFlLElBQUEsbUJBQVUsRUFBQztJQVV4QixPQUFPLEVBQUUsYUFBRyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDO0lBRXpDLElBQUksRUFBRTtRQWNKLE1BQU0sRUFBRTtZQUNOLE1BQU0sRUFBRSxRQUFRO1lBQ2hCLElBQUksRUFBRSxLQUFLO1lBQ1gsU0FBUyxFQUFFLENBQUM7WUFDWixlQUFlLEVBQUUsQ0FBQztZQUNsQixRQUFRLEVBQUUsRUFBRTtZQUNaLFNBQVMsRUFBRSxFQUFFO1lBQ2IsU0FBUyxFQUFFLEVBQUUsR0FBRyxJQUFJLEdBQUcsSUFBSTtTQUM1QjtRQWVELEtBQUssRUFBRTtZQUNMLE1BQU0sRUFBRSxRQUFRO1lBQ2hCLE9BQU8sRUFBRSxJQUFJO1lBQ2IsVUFBVSxFQUFFLENBQUM7WUFDYixNQUFNLEVBQUUsSUFBSTtZQUNaLFdBQVcsRUFBRSxDQUFDO1lBQ2QsUUFBUSxFQUFFLEVBQUU7U0FDYjtRQWVELE1BQU0sRUFBRTtZQUNOLE1BQU0sRUFBRSxRQUFRO1lBQ2hCLE1BQU0sRUFBRSxFQUFFO1NBQ1g7S0FDRjtDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb25maWcgc291cmNlOiBodHRwczovL2dpdC5pby9KZmVmV1xyXG4gKlxyXG4gKiBGZWVsIGZyZWUgdG8gbGV0IHVzIGtub3cgdmlhIFBSLCBpZiB5b3UgZmluZCBzb21ldGhpbmcgYnJva2VuIGluIHRoaXMgY29uZmlnXHJcbiAqIGZpbGUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IEVudiBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0VudidcclxuaW1wb3J0IHsgaGFzaENvbmZpZyB9IGZyb20gJ0BhZG9uaXNqcy9jb3JlL2J1aWxkL2NvbmZpZydcclxuXHJcbi8qXHJcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG58IEhhc2ggQ29uZmlnXHJcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG58XHJcbnwgVGhlIGBIYXNoQ29uZmlnYCByZWxpZXMgb24gdGhlIGBIYXNoTGlzdGAgaW50ZXJmYWNlIHdoaWNoIGlzXHJcbnwgZGVmaW5lZCBpbnNpZGUgYGNvbnRyYWN0c2AgZGlyZWN0b3J5LlxyXG58XHJcbiovXHJcbmV4cG9ydCBkZWZhdWx0IGhhc2hDb25maWcoe1xyXG4gIC8qXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfCBEZWZhdWx0IGhhc2hlclxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IEJ5IGRlZmF1bHQgd2UgbWFrZSB1c2Ugb2YgdGhlIGFyZ29uIGhhc2hlciB0byBoYXNoIHZhbHVlcy4gSG93ZXZlciwgZmVlbFxyXG4gIHwgZnJlZSB0byBjaGFuZ2UgdGhlIGRlZmF1bHQgdmFsdWVcclxuICB8XHJcbiAgKi9cclxuICBkZWZhdWx0OiBFbnYuZ2V0KCdIQVNIX0RSSVZFUicsICdzY3J5cHQnKSxcclxuXHJcbiAgbGlzdDoge1xyXG4gICAgLypcclxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgfCBzY3J5cHRcclxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgfFxyXG4gICAgfCBTY3J5cHQgbWFwcGluZyB1c2VzIHRoZSBOb2RlLmpzIGluYnVpbHQgY3J5cHRvIG1vZHVsZSBmb3IgY3JlYXRpbmdcclxuICAgIHwgaGFzaGVzLlxyXG4gICAgfFxyXG4gICAgfCBXZSBhcmUgdXNpbmcgdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbiByZWNvbW1lbmRlZCB3aXRoaW4gdGhlIE5vZGUuanNcclxuICAgIHwgZG9jdW1lbnRhdGlvbi5cclxuICAgIHwgaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9jcnlwdG8uaHRtbCNjcnlwdG9zY3J5cHRwYXNzd29yZC1zYWx0LWtleWxlbi1vcHRpb25zLWNhbGxiYWNrXHJcbiAgICB8XHJcbiAgICAqL1xyXG4gICAgc2NyeXB0OiB7XHJcbiAgICAgIGRyaXZlcjogJ3NjcnlwdCcsXHJcbiAgICAgIGNvc3Q6IDE2Mzg0LFxyXG4gICAgICBibG9ja1NpemU6IDgsXHJcbiAgICAgIHBhcmFsbGVsaXphdGlvbjogMSxcclxuICAgICAgc2FsdFNpemU6IDE2LFxyXG4gICAgICBrZXlMZW5ndGg6IDY0LFxyXG4gICAgICBtYXhNZW1vcnk6IDMyICogMTAyNCAqIDEwMjQsXHJcbiAgICB9LFxyXG5cclxuICAgIC8qXHJcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHwgQXJnb25cclxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgfFxyXG4gICAgfCBBcmdvbiBtYXBwaW5nIHVzZXMgdGhlIGBhcmdvbjJgIGRyaXZlciB0byBoYXNoIHZhbHVlcy5cclxuICAgIHxcclxuICAgIHwgTWFrZSBzdXJlIHlvdSBpbnN0YWxsIHRoZSB1bmRlcmx5aW5nIGRlcGVuZGVuY3kgZm9yIHRoaXMgZHJpdmVyIHRvIHdvcmsuXHJcbiAgICB8IGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BoYy1hcmdvbjIuXHJcbiAgICB8XHJcbiAgICB8IG5wbSBpbnN0YWxsIHBoYy1hcmdvbjJcclxuICAgIHxcclxuICAgICovXHJcbiAgICBhcmdvbjoge1xyXG4gICAgICBkcml2ZXI6ICdhcmdvbjInLFxyXG4gICAgICB2YXJpYW50OiAnaWQnLFxyXG4gICAgICBpdGVyYXRpb25zOiAzLFxyXG4gICAgICBtZW1vcnk6IDQwOTYsXHJcbiAgICAgIHBhcmFsbGVsaXNtOiAxLFxyXG4gICAgICBzYWx0U2l6ZTogMTYsXHJcbiAgICB9LFxyXG5cclxuICAgIC8qXHJcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHwgQmNyeXB0XHJcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHxcclxuICAgIHwgQmNyeXB0IG1hcHBpbmcgdXNlcyB0aGUgYGJjcnlwdGAgZHJpdmVyIHRvIGhhc2ggdmFsdWVzLlxyXG4gICAgfFxyXG4gICAgfCBNYWtlIHN1cmUgeW91IGluc3RhbGwgdGhlIHVuZGVybHlpbmcgZGVwZW5kZW5jeSBmb3IgdGhpcyBkcml2ZXIgdG8gd29yay5cclxuICAgIHwgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGhjLWJjcnlwdC5cclxuICAgIHxcclxuICAgIHwgbnBtIGluc3RhbGwgcGhjLWJjcnlwdFxyXG4gICAgfFxyXG4gICAgKi9cclxuICAgIGJjcnlwdDoge1xyXG4gICAgICBkcml2ZXI6ICdiY3J5cHQnLFxyXG4gICAgICByb3VuZHM6IDEwLFxyXG4gICAgfSxcclxuICB9LFxyXG59KVxyXG4iXX0=